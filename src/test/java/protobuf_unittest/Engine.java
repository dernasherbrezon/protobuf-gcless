// Generated by the protocol buffer compiler.  DO NOT EDIT!

package protobuf_unittest;

public  final class Engine extends
    com.google.protobuf.GeneratedMessage {
  // Use Engine.newBuilder() to construct.
  private Engine() {
    initFields();
  }
  private Engine(boolean noInit) {}
  
  private static final Engine defaultInstance;
  public static Engine getDefaultInstance() {
    return defaultInstance;
  }
  
  public Engine getDefaultInstanceForType() {
    return defaultInstance;
  }
  
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protobuf_unittest.NestedBuilders.internal_static_protobuf_unittest_Engine_descriptor;
  }
  
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protobuf_unittest.NestedBuilders.internal_static_protobuf_unittest_Engine_fieldAccessorTable;
  }
  
  // optional int32 cylinder = 1;
  public static final int CYLINDER_FIELD_NUMBER = 1;
  private boolean hasCylinder;
  private int cylinder_ = 0;
  public boolean hasCylinder() { return hasCylinder; }
  public int getCylinder() { return cylinder_; }
  
  // optional int32 liters = 2;
  public static final int LITERS_FIELD_NUMBER = 2;
  private boolean hasLiters;
  private int liters_ = 0;
  public boolean hasLiters() { return hasLiters; }
  public int getLiters() { return liters_; }
  
  private void initFields() {
  }
  public final boolean isInitialized() {
    return true;
  }
  
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (hasCylinder()) {
      output.writeInt32(1, getCylinder());
    }
    if (hasLiters()) {
      output.writeInt32(2, getLiters());
    }
    getUnknownFields().writeTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
  
    size = 0;
    if (hasCylinder()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, getCylinder());
    }
    if (hasLiters()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, getLiters());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }
  
  public static protobuf_unittest.Engine parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static protobuf_unittest.Engine parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static protobuf_unittest.Engine parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static protobuf_unittest.Engine parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static protobuf_unittest.Engine parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static protobuf_unittest.Engine parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  public static protobuf_unittest.Engine parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    Builder builder = newBuilder();
    if (builder.mergeDelimitedFrom(input)) {
      return builder.buildParsed();
    } else {
      return null;
    }
  }
  public static protobuf_unittest.Engine parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    Builder builder = newBuilder();
    if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
      return builder.buildParsed();
    } else {
      return null;
    }
  }
  public static protobuf_unittest.Engine parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static protobuf_unittest.Engine parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  
  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(protobuf_unittest.Engine prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }
  
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> {
    private protobuf_unittest.Engine result;
    
    // Construct using protobuf_unittest.Engine.newBuilder()
    private Builder() {}
    
    private static Builder create() {
      Builder builder = new Builder();
      builder.result = new protobuf_unittest.Engine();
      return builder;
    }
    
    protected protobuf_unittest.Engine internalGetResult() {
      return result;
    }
    
    public Builder clear() {
      if (result == null) {
        throw new IllegalStateException(
          "Cannot call clear() after build().");
      }
      result = new protobuf_unittest.Engine();
      return this;
    }
    
    public Builder clone() {
      return create().mergeFrom(result);
    }
    
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protobuf_unittest.Engine.getDescriptor();
    }
    
    public protobuf_unittest.Engine getDefaultInstanceForType() {
      return protobuf_unittest.Engine.getDefaultInstance();
    }
    
    public boolean isInitialized() {
      return result.isInitialized();
    }
    public protobuf_unittest.Engine build() {
      if (result != null && !isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return buildPartial();
    }
    
    private protobuf_unittest.Engine buildParsed()
        throws com.google.protobuf.InvalidProtocolBufferException {
      if (!isInitialized()) {
        throw newUninitializedMessageException(
          result).asInvalidProtocolBufferException();
      }
      return buildPartial();
    }
    
    public protobuf_unittest.Engine buildPartial() {
      if (result == null) {
        throw new IllegalStateException(
          "build() has already been called on this Builder.");
      }
      protobuf_unittest.Engine returnMe = result;
      result = null;
      return returnMe;
    }
    
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protobuf_unittest.Engine) {
        return mergeFrom((protobuf_unittest.Engine)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }
    
    public Builder mergeFrom(protobuf_unittest.Engine other) {
      if (other == protobuf_unittest.Engine.getDefaultInstance()) return this;
      if (other.hasCylinder()) {
        setCylinder(other.getCylinder());
      }
      if (other.hasLiters()) {
        setLiters(other.getLiters());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }
    
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder(
          this.getUnknownFields());
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              return this;
            }
            break;
          }
          case 8: {
            setCylinder(input.readInt32());
            break;
          }
          case 16: {
            setLiters(input.readInt32());
            break;
          }
        }
      }
    }
    
    
    // optional int32 cylinder = 1;
    public boolean hasCylinder() {
      return result.hasCylinder();
    }
    public int getCylinder() {
      return result.getCylinder();
    }
    public Builder setCylinder(int value) {
      result.hasCylinder = true;
      result.cylinder_ = value;
      return this;
    }
    public Builder clearCylinder() {
      result.hasCylinder = false;
      result.cylinder_ = 0;
      return this;
    }
    
    // optional int32 liters = 2;
    public boolean hasLiters() {
      return result.hasLiters();
    }
    public int getLiters() {
      return result.getLiters();
    }
    public Builder setLiters(int value) {
      result.hasLiters = true;
      result.liters_ = value;
      return this;
    }
    public Builder clearLiters() {
      result.hasLiters = false;
      result.liters_ = 0;
      return this;
    }
    
    // @@protoc_insertion_point(builder_scope:protobuf_unittest.Engine)
  }
  
  static {
    defaultInstance = new Engine(true);
    protobuf_unittest.NestedBuilders.internalForceInit();
    defaultInstance.initFields();
  }
  
  // @@protoc_insertion_point(class_scope:protobuf_unittest.Engine)
}

